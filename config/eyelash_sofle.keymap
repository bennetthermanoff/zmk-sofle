#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        btMO {
            bindings = <&mo 4>;
            key-positions = <61 60>;
        };

        mux {
            bindings = <&kp LC(B)>;
            key-positions = <34 35>;
        };

        esc {
            bindings = <&kp ESC>;
            key-positions = <30 29>;
        };

        swapOS {
            bindings = <&tog 1>;
            key-positions = <57 59>;
        };
    };

    macros {
        alt_f4: alt_f4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LALT &kp F4>, <&macro_press>;

            label = "ALT_F4";
        };
    };

    behaviors {
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp ESC         &kp N1     &kp N2  &kp N3        &kp N4     &kp N5          &kp UP_ARROW     &kp N6    &kp N7  &kp N8     &kp N9        &kp N0      &kp BACKSPACE
&kp TAB         &kp Q      &kp W   &kp E         &kp R      &kp T           &kp DOWN_ARROW   &kp Y     &kp U   &kp I      &kp O         &kp P       &kp BSLH
&kp LEFT_SHIFT  &kp A      &kp S   &kp D         &kp F      &kp G           &kp LEFT_ARROW   &kp H     &kp J   &kp K      &kp L         &kp SEMI    &kp APOS
&kp LCTRL       &kp Z      &kp X   &kp C         &kp V      &kp B           &kp RIGHT_ARROW  &kp N     &kp M   &kp COMMA  &kp DOT       &kp FSLH    &kp LSHIFT
&kp C_MUTE      &kp LCTRL  &mo 2   &kp LEFT_ALT  &kp SPACE  &kp LEFT_GUI    &kp ENTER        &kp LCMD  &mo 2   &mo 3      &kp LEFT_ALT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        MACBASE {
            display-name = "LAYER0";
            bindings = <
&kp ESC         &kp N1    &kp N2  &kp N3        &kp N4     &kp N5       &kp UP_ARROW     &kp N6     &kp N7  &kp N8     &kp N9        &kp N0      &kp BACKSPACE
&kp TAB         &kp Q     &kp W   &kp E         &kp R      &kp T        &kp DOWN_ARROW   &kp Y      &kp U   &kp I      &kp O         &kp P       &kp BSLH
&kp LEFT_SHIFT  &kp A     &kp S   &kp D         &kp F      &kp G        &kp LEFT_ARROW   &kp H      &kp J   &kp K      &kp L         &kp SEMI    &kp APOS
&kp LCMD        &kp Z     &kp X   &kp C         &kp V      &kp B        &kp RIGHT_ARROW  &kp N      &kp M   &kp COMMA  &kp DOT       &kp FSLH    &kp LSHIFT
&kp C_MUTE      &kp LCMD  &mo 2   &kp LEFT_ALT  &kp SPACE  &kp LCTRL    &kp ENTER        &kp LCTRL  &mo 2   &mo 3      &kp LEFT_ALT  &kp DELETE
            >;

            sensor-bindings = <&inc_dec_kp C_AC_SCROLL_UP C_AC_SCROLL_DOWN>;
        };

        layer_2 {
            bindings = <
&kp GRAVE  &trans          &trans        &trans     &trans  &trans                  &trans            &trans                 &trans          &trans        &kp MINUS        &kp EQUAL  &kp DELETE
&trans     &trans          &kp UP_ARROW  &trans     &trans  &kp LEFT_BRACKET        &trans            &kp RIGHT_BRACKET      &trans          &trans        &trans           &trans     &kp BACKSLASH
&trans     &kp LEFT_ARROW  &kp DOWN      &kp RIGHT  &trans  &kp LEFT_BRACE          &kp C_PREV        &kp RIGHT_BRACE        &kp C_PREVIOUS  &kp C_PP      &kp C_NEXT       &trans     &trans
&trans     &trans          &trans        &trans     &trans  &kp LEFT_PARENTHESIS    &kp C_NEXT        &kp RIGHT_PARENTHESIS  &trans          &kp C_VOL_DN  &kp C_VOLUME_UP  &trans     &trans
&trans     &trans          &trans        &trans     &trans  &trans                  &kp C_PLAY_PAUSE  &trans                 &trans          &trans        &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        layer_3 {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &trans  &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &alt_f4  &trans    &trans  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&trans  &trans  &trans  &trans  &trans   &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans   &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans   &trans    &trans  &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans  &trans  &trans  &trans   &trans    &trans  &trans        &trans        &trans        &trans        &trans
            >;
        };
    };
};
